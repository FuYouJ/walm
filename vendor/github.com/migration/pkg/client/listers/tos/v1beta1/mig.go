/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/migration/pkg/apis/tos/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MigLister helps list Migs.
type MigLister interface {
	// List lists all Migs in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.Mig, err error)
	// Migs returns an object that can list and get Migs.
	Migs(namespace string) MigNamespaceLister
	MigListerExpansion
}

// migLister implements the MigLister interface.
type migLister struct {
	indexer cache.Indexer
}

// NewMigLister returns a new MigLister.
func NewMigLister(indexer cache.Indexer) MigLister {
	return &migLister{indexer: indexer}
}

// List lists all Migs in the indexer.
func (s *migLister) List(selector labels.Selector) (ret []*v1beta1.Mig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Mig))
	})
	return ret, err
}

// Migs returns an object that can list and get Migs.
func (s *migLister) Migs(namespace string) MigNamespaceLister {
	return migNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MigNamespaceLister helps list and get Migs.
type MigNamespaceLister interface {
	// List lists all Migs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.Mig, err error)
	// Get retrieves the Mig from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.Mig, error)
	MigNamespaceListerExpansion
}

// migNamespaceLister implements the MigNamespaceLister
// interface.
type migNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Migs in the indexer for a given namespace.
func (s migNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.Mig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Mig))
	})
	return ret, err
}

// Get retrieves the Mig from the indexer for a given namespace and name.
func (s migNamespaceLister) Get(name string) (*v1beta1.Mig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("mig"), name)
	}
	return obj.(*v1beta1.Mig), nil
}
